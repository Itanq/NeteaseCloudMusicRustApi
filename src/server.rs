
use actix_web::{
    middleware::Logger,
    HttpServer, App, Resource, web, HttpResponse,
    get
};
use structopt::StructOpt;

use crate::music_api::*;

#[derive(Debug, StructOpt)]
#[structopt(name = "RustNeteaseCloudMusicApi", about = "A Netease Cloud Music Rust API Service")]
pub(crate) struct Opt {
    #[structopt(long, default_value = "localhost")]
    ip: String,

    #[structopt(short, long, default_value = "8000")]
    port: i32
}

pub(crate) async fn start_server(opt: &Opt) -> std::io::Result<()> {
    let server = HttpServer::new(|| {
        App::new()
            .wrap(Logger::default())
            .wrap(Logger::new("%a %t %s"))
            .service(index_album_detail_dynamic)
            .service(index_album_newest)
            .service(index_album_sub)
            .service(index_album_sublist)
            .service(index_album)
            .service(index_artist_album)
            .service(index_artist_desc)
            .service(index_artist_list)
            .service(index_artist_mv)
            .service(index_artist_sub)
            .service(index_artist_sublist)
            .service(index_artist_top_song)
            .service(index_artists)
            .service(index_banner)
            .service(index_check_music)
            .service(index_comment_album)
            .service(index_comment_dj)
            .service(index_comment_event)
            .service(index_comment_hot)
            .service(index_comment_hotwall_list)
            .service(index_comment_like)
            .service(index_comment_music)
            .service(index_comment_mv)
            .service(index_comment_playlist)
            .service(index_comment)
            .service(index_daily_sigin)
            .service(index_dj_banner)
            .service(index_dj_category_excludehot)
            .service(index_dj_category_recommend)
            .service(index_dj_catelist)
            .service(index_dj_detail)
            .service(index_dj_hot)
            .service(index_dj_paygift)
            .service(index_dj_program_detail)
            .service(index_dj_program_toplist_hours)
            .service(index_dj_program_toplist)
            .service(index_dj_program)
            .service(index_dj_radio_hot)
            .service(index_dj_recommend_type)
            .service(index_dj_recommend)
            .service(index_dj_sub)
            .service(index_dj_sublist)
            .service(index_dj_today_perfered)
            .service(index_dj_toplist_hours)
            .service(index_dj_toplist_newcomer)
            .service(index_dj_toplist_pay)
            .service(index_dj_toplist_popular)
            .service(index_dj_toplist)
            .service(index_event_del)
            .service(index_event_forward)
            .service(index_event)
            .service(index_fm_trash)
            .service(index_follow)
            .service(index_hot_topic)
            .service(index_like)
            .service(index_likelist)
            .service(index_login_cellphone)
            .service(index_login_refresh)
            .service(index_logout)
            .service(index_lyric)
            .service(index_msg_comments)
            .service(index_msg_forwards)
            .service(index_msg_notices)
            .service(index_msg_private_history)
            .service(index_msg_private)
            .service(index_mv_all)
            .service(index_mv_detail)
            .service(index_mv_exclusive_rcmd)
            .service(index_mv_first)
            .service(index_mv_sub)
            .service(index_mv_sublist)
            .service(index_mv_url)
            .service(index_personal_fm)
            .service(index_personalized_djprogram)
            .service(index_personalized_mv)
            .service(index_personalized_newsong)
            .service(index_personalized_privatecontent)
            .service(index_personalized)
            .service(index_playlist_catlist)
            .service(index_playlist_create)
            .service(index_playlist_delete)
            .service(index_playlist_desc_update)
            .service(index_playlist_detail)
            .service(index_playlist_hot)
            .service(index_playlist_name_update)
            .service(index_playlist_subscribe)
            .service(index_playlist_subscribers)
            .service(index_playlist_tags_update)
            .service(index_playlist_tracks)
            .service(index_playlist_update)
            .service(index_playmode_intelligence_list)
            .service(index_program_recommend)
            .service(index_rebind)
            .service(index_recommend_resource)
            .service(index_recommend_songs)
            .service(index_register_cellphone)
            .service(index_related_allvideo)
            .service(index_related_playlist)
            .service(index_resource_like)
            .service(index_search_default)
            .service(index_search_hot_detail)
            .service(index_search_hot)
            .service(index_search_multimatch)
            .service(index_search_suggest)
            .service(index_search)
            .service(index_send_playlist)
            .service(index_send_text)
            .service(index_setting)
            .service(index_share_resource)
            .service(index_share_resource)
            .service(index_simi_artist)
            .service(index_simi_mv)
            .service(index_simi_playlist)
            .service(index_simi_song)
            .service(index_simi_user)
            .service(index_song_detail)
            .service(index_song_url)
            .service(index_top_album)
            .service(index_top_artist)
            .service(index_top_list)
            .service(index_top_mv)
            .service(index_top_playlist_highquality)
            .service(index_top_playlist)
            .service(index_top_song)
            .service(index_toplist_artist)
            .service(index_toplist_detail)
            .service(index_toplist)
            .service(index_user_audio)
            .service(index_user_cloud_del)
            .service(index_user_cloud_detail)
            .service(index_user_record)
            .service(index_user_update)
            .service(index_user_subcount)
            .service(index_user_update)
            .service(index_video_detail)
            .service(index_video_group_list)
            .service(index_video_group)
            .service(index_video_sub)
            .service(index_video_url)
            .service(index_weblog)
            .service(
                actix_files::Files::new("/", "./public/").index_file("index.html")
            )
    });

    println!("{}:{}", opt.ip, opt.port);

    server.bind(format!("{}:{}", opt.ip, opt.port))?.run().await
}